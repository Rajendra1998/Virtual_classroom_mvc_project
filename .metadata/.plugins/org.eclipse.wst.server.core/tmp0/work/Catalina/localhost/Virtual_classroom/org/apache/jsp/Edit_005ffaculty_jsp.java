/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.2
 * Generated at: 2019-01-10 19:53:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import model.Faculty;

public final class Edit_005ffaculty_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Faculty");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<script>\r\n");
      out.write("function checkForm(form)\r\n");
      out.write("{\r\n");
      out.write("  if(form.name.value == \"\") \r\n");
      out.write("  {\r\n");
      out.write("    alert(\"Error: Name cannot be blank!\");\r\n");
      out.write("    form.name.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("  re =/^[a-z]+$/i;\r\n");
      out.write("  if(!re.test(form.name.value)) \r\n");
      out.write("  {\r\n");
      out.write("    alert(\"Error:Name must contain only letters!\");\r\n");
      out.write("    form.name.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  if(form.uid.value == \"\") \r\n");
      out.write("  {\r\n");
      out.write("    alert(\"Error: User-ID cannot be blank!\");\r\n");
      out.write("    form.uid.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("  re = /^\\w+$/;\r\n");
      out.write("  if(!re.test(form.uid.value)) \r\n");
      out.write("  {\r\n");
      out.write("    alert(\"Error: User-ID must contain only letters, numbers and underscores!\");\r\n");
      out.write("    form.uid.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  if(form.cno.value==\"\")\r\n");
      out.write("  {\r\n");
      out.write("\t  alert(\"Error: Contact no. cannot be blank!\");\r\n");
      out.write("\t    form.cno.focus();\r\n");
      out.write("\t    return false;\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  if(form.cno.value!=\"\")\r\n");
      out.write("  {\r\n");
      out.write("\t  if(form.cno.value.length !=10) \r\n");
      out.write("\t  {\r\n");
      out.write("\t      alert(\"Error: Enter a valid 10 digit contact no.!\");\r\n");
      out.write("\t      form.cno.focus();\r\n");
      out.write("\t      return false;\r\n");
      out.write("\t  }\r\n");
      out.write("\t  \r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("  if(form.eid.value==\"\")\r\n");
      out.write("  {\r\n");
      out.write("\t  alert(\"Error: Email id cannot be blank!\");\r\n");
      out.write("\t    form.eid.focus();\r\n");
      out.write("\t    return false;\r\n");
      out.write("  }\r\n");
      out.write("  if(form.pass.value != \"\" && form.pass.value == form.repass.value) \r\n");
      out.write("  {\r\n");
      out.write("    if(form.pass.value.length < 6) \r\n");
      out.write("    {\r\n");
      out.write("      alert(\"Error: Password must contain at least six characters!\");\r\n");
      out.write("      form.pass.focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    re = /[0-9]/;\r\n");
      out.write("    if(!re.test(form.pass.value)) \r\n");
      out.write("    {\r\n");
      out.write("      alert(\"Error: password must contain at least one number (0-9)!\");\r\n");
      out.write("      form.pass.focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    re = /[a-z]/;\r\n");
      out.write("    if(!re.test(form.pass.value)) \r\n");
      out.write("    {\r\n");
      out.write("      alert(\"Error: password must contain at least one lowercase letter (a-z)!\");\r\n");
      out.write("      form.pass.focus();\r\n");
      out.write("      return false;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("  } \r\n");
      out.write("  else \r\n");
      out.write("  {\r\n");
      out.write("    alert(\"Error: Please check that you've entered and confirmed your password!\");\r\n");
      out.write("    form.pass.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<head>\r\n");
      out.write("<title> ADMIN | EDIT_FACULTY </title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style1.css\" >\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<center>\r\n");
      out.write("<font color=\"blue\" size=\"3\">\r\n");
      out.write("<h1><b>VIRTUAL-CLASSROOM</b></h1>\r\n");
      out.write("\r\n");
      out.write("<div class=\"vclass-form\">\r\n");
      out.write("\r\n");
      out.write("<form action=\"update_faculty\" method=\"post\" onsubmit=\"return checkForm(this);\">\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("\r\n");
      out.write("<h2 align=\"center\"><b>EDIT FACULTY</b></h2>\r\n");
Faculty editFaculty=(Faculty)request.getAttribute("facultyDetails");
      out.write("\r\n");
      out.write("<tr><td>Name</td><td><input type=\"text\" name=\"name\" class=\"field left\" readonly=\"readonly\" value=\"");
      out.print(editFaculty.getName() );
      out.write("\" id=\"button\"></td></tr>\r\n");
      out.write("<tr><td>User-ID</td><td><input type=\"text\" name=\"uid\" class=\"field left\" readonly=\"readonly\" value=\"");
      out.print(editFaculty.getUser_id() );
      out.write("\" id=\"button\"></td></tr>\r\n");
      out.write("<tr><td>Contact no.</td><td><input type=\"number\" name=\"cno\" title=\"Contact no. must be of 10 digits\" value=\"");
      out.print(editFaculty.getPhno() );
      out.write("\" id=\"button\" placeholder=\"Enter the contact no.\"></td></tr>\r\n");
      out.write("<tr><td>Email id</td><td><input type=\"email\" name=\"eid\" title=\"Email id must be a valid one\" id=\"button\" value=\"");
      out.print(editFaculty.getEid() );
      out.write("\" placeholder=\"Enter the email-id\"></td></tr>\r\n");
      out.write("<tr><td>Password</td><td><input type=\"password\" name=\"pass\" title=\"Password must contain at least 6 characters, including UPPER/lowercase and numbers.\" value=\"");
      out.print(editFaculty.getPassword() );
      out.write("\" id=\"button\" placeholder=\"Enter the password\"></td></tr>\r\n");
      out.write("<tr><td>Confirm Password</td><td><input type=\"password\" name=\"repass\" title=\"Please enter the same Password as above.\" value=\"");
      out.print(editFaculty.getPassword() );
      out.write("\" id=\"button\" placeholder=\"Re-Enter the password\"></td></tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<input type=\"submit\" value=\"UPDATE\" id=\"butt\">&nbsp\r\n");
      out.write("<input type=\"reset\" value=\"RESET\" id=\"butt\">\r\n");
      out.write("<br><br><br>\r\n");
      out.write("<a href=\"Admin_logged.jsp\"> <i>Back</i></a>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</font>\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
